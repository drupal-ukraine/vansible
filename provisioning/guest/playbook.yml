---
# This playbook will be executed at guest host.
- hosts: 127.0.0.1
  connection: local
  gather_facts: no


  vars:
    pear_channels:
      - pear.drush.org
    pear_packages:
      - drush/drush
      # PHP_CodeSniffer 2.x.x not supported. Please, check for 1.5.x version.
      - PHP_CodeSniffer-1.5.5
    apt_repos:
      - ppa:chris-lea/node.js
    apt_packages:
      - php-pear
      - git
      - python-software-properties
      - ruby1.9.1
      - ruby1.9.1-dev
      - rubygems1.9.1
      - irb1.9.1
      - ri1.9.1
      - rdoc1.9.1
      - build-essential
      - libopenssl-ruby1.9.1
      - libssl-dev
      - zlib1g-dev
      - apache2
      - mysql-server
      - mysql-client
      - python-mysqldb
      - php5
      - php5-gd
      - nodejs
      - php5-mcrypt
      - libapache2-mod-php5
      - php5-mysql
      - tree
      - php5-imagick
      - imagemagick
    gem_packages:
      - jshint
      - scss-lint
    npm_packages:
      - jshint
    apache2_modules:
      - rewrite
    composer_global_require:
      - drupal/coder:dev-7.x-2.x
      - squizlabs/php_codesniffer=*
    git_repos:
      - { branch: 'master', repo: 'http://git.drupal.org/sandbox/coltrane/1921926.git', name: 'DrupalSecure' } # git clone --branch master http://git.drupal.org/sandbox/coltrane/1921926.git DrupalSecure
      - { branch: '7.x-1.x', repo: 'https://github.com/klausi/drupalpractice.git', name: 'DrupalPractice' } #git clone --branch 7.x-1.x https://github.com/klausi/drupalpractice.git DrupalPractice
      - { branch: 'master', repo: 'https://github.com/podarok/Symfony2-coding-standard.git', name: 'Symfony2' }
    phpcs_standards:
      - { path: '/root/.composer/vendor/drupal/coder/coder_sniffer/Drupal', name: 'Drupal' } #/root/.composer/vendor/drupal/coder/coder_sniffer/Drupal Drupal
      - { path: '/root/.composer/vendor/podarok/DrupalSecure/DrupalSecure', name: 'DrupalSecure' } #/root/.composer/vendor/podarok/DrupalSecure DrupalSecure
      - { path: '/root/.composer/vendor/podarok/DrupalPractice/DrupalPractice', name: 'DrupalPractice' } #/root/.composer/vendor/podarok/DrupalPractice DrupalPractice
      - { path: '/root/.composer/vendor/podarok/Symfony2', name: 'Symfony2' }


  pre_tasks:

  - name: Install apt repos
    apt_repository: repo={{ item }}
    with_items: apt_repos
    tags:
      - nodejs

  - name: Update apt cache
    sudo: yes
    apt: update_cache=yes

  - name: Install apt packages
    apt: name={{ item }} state=present
    with_items: apt_packages
    tags:
      - sniffers
      - gem
      - ruby

  - name: Install nodejs packages
    npm: name={{ item }} global=yes
    with_items: npm_packages

  - name: Update ruby alternatives for using ruby 1.9.1(3) version
    sudo: yes
    shell: "update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby1.9.1 400 --slave /usr/share/man/man1/ruby.1.gz ruby.1.gz /usr/share/man/man1/ruby1.9.1.1.gz --slave /usr/bin/ri ri /usr/bin/ri1.9.1 --slave /usr/bin/irb irb /usr/bin/irb1.9.1 --slave /usr/bin/rdoc rdoc /usr/bin/rdoc1.9.1"
    tags:
      - sniffers
      - ruby

  - name: Install gem packages
    shell: "gem install {{ item }}"
    with_items: gem_packages
    ignore_errors: yes
    tags:
      - sniffers
      - gem
      - ruby

  - name: Install pear packages
    shell: "pear install {{ item }}"
    with_items: pear_packages
    ignore_errors: yes

  tasks:

  - name: Install composer 1 of 3
    sudo: yes
    shell: "curl -sS https://getcomposer.org/installer | php"

  - name: Install composer 2 of 3
    sudo: yes
    shell: "mv -f composer.phar /usr/local/bin/composer"

  - name: Install composer 3 of 3
    sudo: yes
    shell: "chmod 755 /usr/local/bin/composer"

  - name: Install composer global requires
    sudo: yes
    shell: "composer global require {{ item }}"
    with_items: composer_global_require
    tags:
      - sniffers
      - composer
      - git

  - name: Install global git repos
    sudo: yes
    git: repo={{ item.repo }} dest=/root/.composer/vendor/podarok/{{ item.name }} version={{ item.branch }}
    with_items: git_repos
    #ignore_errors: yes
    tags:
      - sniffers
      - git

  - name: Install php codesniffer standards
    sudo: yes
    file: src={{ item.path }} dest=/usr/share/php/PHP/CodeSniffer/Standards/{{ item.name }} state=link
    with_items: phpcs_standards
    tags:
      - sniffers
      - git

  - name: Apache2 modules
    apache2_module: state=present name={{ item }}
    with_items: apache2_modules
    tags:
      - apache
      - lamp
    notify: Restart Apache

  handlers:
  - name: Restart Apache
    sudo: yes
    service: name=apache2 state=restarted